openapi: 3.0.3
info:
  title: API Delivery Django
  version: 1.0.0
  description: |-
    Essa API permite a criação, atualização e busca de entregas, além de oferecer a possibilidade de procurar por entregas por destinatário ou por remetente.
     A API também permite o cancelamento de entregas e o consumo de uma API REST para buscar detalhes de endereços com base no CEP e no número do endereço.
     A API é protegida com autenticação JWT Token e está documentada em Swagger para facilitar o uso e a integração com outras aplicações.
paths:
  /api/deliveries/:
    post:
      operationId: api_deliveries_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/{id}/cancel/:
    put:
      operationId: api_orders_cancel_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_cancel_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/delivered/:
    put:
      operationId: api_orders_delivered_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_delivered_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/search/:
    get:
      operationId: api_orders_search_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/products/{product_id}/order_items/:
    get:
      operationId: api_products_order_items_list
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address_info:
          allOf:
          - $ref: '#/components/schemas/AddressInfo'
          readOnly: true
        client:
          allOf:
          - $ref: '#/components/schemas/Client'
          readOnly: true
        number:
          type: string
          maxLength: 50
        complement:
          type: string
          nullable: true
          maxLength: 100
        zip_code:
          type: string
          maxLength: 8
      required:
      - address_info
      - client
      - id
      - number
      - zip_code
    AddressInfo:
      type: object
      properties:
        cep:
          type: string
        logradouro:
          type: string
        complemento:
          type: string
        bairro:
          type: string
        localidade:
          type: string
        uf:
          type: string
        ibge:
          type: string
        gia:
          type: string
        ddd:
          type: string
        siafi:
          type: string
      required:
      - bairro
      - cep
      - complemento
      - ddd
      - gia
      - ibge
      - localidade
      - logradouro
      - siafi
      - uf
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 150
      required:
      - email
      - id
      - name
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_date:
          type: string
          format: date-time
          readOnly: true
        state_delivery:
          type: integer
        address_of_delivery:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        supplier:
          allOf:
          - $ref: '#/components/schemas/Supplier'
          readOnly: true
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
      required:
      - address_of_delivery
      - id
      - order_date
      - order_items
      - supplier
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - id
      - order
      - product
      - quantity
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_date:
          type: string
          format: date-time
          readOnly: true
        state_delivery:
          type: integer
        address_of_delivery:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        supplier:
          allOf:
          - $ref: '#/components/schemas/Supplier'
          readOnly: true
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - id
      - name
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 150
      required:
      - email
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
